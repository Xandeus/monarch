.window-app.monarch-card:not(.minimized) {
	display: grid;
	grid-template-rows: 30px auto;
	grid-template-areas: 
		"header" 
		"content";

	.window-header {
		grid-area: header;
		z-index: 1;

		gap: 1ch;
		align-items: center;
		justify-content: end;

		opacity: .5;
	
		border: none;

		.window-title {
			display: none;
			font-size: 0;
			visibility: hidden;
			flex-basis: 0;
			height: 0;
		}

		.header-button {
			font-size: 0px;
			margin: 0;
			line-height: 1em;

			i { font-size: var(--font-size-14); }
		}
	}

	.window-resizable-handle { opacity: .1; }

	&:hover {
		.window-header { opacity: 1; }
		.window-resizable-handle { opacity: .5; }
	}
}

.monarch-card {
	padding: .5em;

	* { transition: opacity .5s; }

	.window-content {
		grid-row: header-start / content-end;
		grid-column: content-start / content-end;
		overflow: visible;
	}

	form {
		display: grid;
		grid-template-columns: 1fr;
		grid-template-rows: 20px 1fr auto;
		grid-template-areas:
			"name"
			"hud"
			"data";

		row-gap: .5em;

		.card-data { opacity: 0; }
		.name { opacity: .5; }
	}

	&:hover, &:focus-within {
		form {
			.name { opacity: 1;}
			.magnify { opacity: .25; }
			.card-hud { 
				opacity: 1;
				.card-controls { visibility: visible; } 
			}
			.card-data {		
				opacity: .6;
				height: auto;
				padding: 1em;

				&:hover, &:focus-within {
					opacity: 1;
				}	
			}
		}
	}

	.window-header, .name {
		filter: 
			drop-shadow(0 0 3px black)
			drop-shadow(0 0 6px black);
	}

	.name {
		grid-area: name;
		border: none;
		font-size: var(--font-size-18);
		display: flex;
		justify-self: start;
		justify-content: center;
		align-items: center;
		margin: 0;
		margin-bottom: -6px;
		z-index: 2;
		max-width: 50%;

		input {
			margin-left: .5ch;
			border-bottom: 1px solid transparent;
			margin-bottom: -1px;

			&:hover, &:focus {
				border-bottom: 1px dashed white;
				box-shadow: none;
			}
		}
	}

	.card-hud {
		opacity: .5;
		grid-area: hud;
		z-index: 4;

		padding: 0 1.2em 0 .2em;

		grid-template-rows: auto auto;
		grid-template-columns: .8em 1fr;
		grid-template-areas:
			"markers badges"
			"markers controls";

		column-gap: .2em;

		.markers {
			margin: 0;
			flex-direction: column;
			align-content: center;
		}
		.card-controls {
			visibility: hidden;
		}
	}

	.card-display { 
		grid-row: name-start / data-end;
		grid-column: name-start / data-end;

		display: grid;
		grid-template-columns: 1fr;
		grid-template-rows: 1fr;
		grid-template-areas: "middle";

		overflow: hidden;
		border-radius: 4px;

		filter: drop-shadow(0 0 8px black);

		.magnify {
			grid-area: middle;
			place-self: center;
			font-size: 64px;
			opacity: 0;
			transition: color .5s;

			&:hover {
				opacity: .75;
			}
		}
		img { grid-area: middle; }
	}

	.card-data { 
		grid-area: data;
		display: grid;
		height: 0px;
		
		background: linear-gradient(to top, rgba(0, 0, 0, .75) 20%, rgba(0, 0, 0, .5) 80%, transparent);

		grid-template-columns: min-content 1fr;
		grid-template-rows: repeat(5, 2em);
		grid-template-areas:
			"configs description"
			"type description"
			"suit description"
			"value description"
			"dimensions dimensions";

		margin-top: -1.5em;

		&.read-only {
			grid-template-rows: 10em;
			grid-template-columns: 1fr;
			grid-template-areas: "description";
		}

		column-gap: 1em;
		row-gap: .3em;

		align-items: center;

		z-index: 3;

		border-radius: 4px;
		overflow: hidden;
		
		font-size: var(--font-size-12);
		text-shadow: 0 0 3px black, 0 0 6px black;

		label, input, textarea { text-shadow: inherit; }

		

		.form-group {
			margin: 0;
			gap: 1ch;

			.form-fields { gap: 1ch; }

			label, input { 
				padding: 0;
				margin: 0;
			}
			label {
				white-space: nowrap;
			}

			&:not(.stacked) { flex-wrap: nowrap; }

			&.stacked {
				align-self: stretch;
				display: grid;
				row-gap: .3em;
				grid-template-rows: min-content auto;

				textarea { min-height: 100%; }
			}
		}
	}
	.configs { 
		grid-area: configs; 
		display: flex;
		gap: 1ch;
		flex-wrap: nowrap;
		white-space: nowrap;
	}
	.type { grid-area: type; }
	.suit { grid-area: suit; }
	.value { grid-area: value; }
	.dimensions { grid-area: dimensions; }
	.description { grid-area: description; }
}